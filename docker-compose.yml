version: '3.8'
services:

  db:
    image: postgres:17.2
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5434:5434'
    restart: on-failure
    networks:
      - applications_prod

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "zkCli.sh", "-server", "localhost:2181", "ls", "/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '2181:2181'
    restart: on-failure
    networks:
      - applications_prod
      
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    env_file:
      - .env
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - '9092:9092'
    restart: on-failure
    networks:
      - applications_prod
  
  app:
    build:
      context: .
    command: >
      sh -c "chmod a+x /app/scripts/*.sh && 
      /app/scripts/run_migrations.sh && 
      /app/scripts/run_gunicorn.sh"
    depends_on:
      - db
      - kafka
    env_file:
      - .env
    ports:
      - '8000:8000'
    restart: on-failure
    networks:
      - applications_prod

volumes:
  pgdata:

networks:
  applications_prod:
